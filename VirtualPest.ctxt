#BlueJ class context
comment0.params=initName\ initState
comment0.target=VirtualPest(java.lang.String,\ int)
comment0.text=\ \n\ initialize\ Virtual\ Pest\ name\ and\ state\n\ @param\ initName\ the\ name\ of\ the\ pest\n\ @param\ initState\ the\ initial\ state\ of\ the\ Pest\n
comment1.params=
comment1.target=java.lang.String\ getName()
comment1.text=\ \n\ get\ the\ name\ of\ the\ Pest\n\ @return\ the\ name\ of\ the\ Pest\n
comment2.params=
comment2.target=int\ getIntState()
comment2.text=\ \n\ get\ the\ state\ of\ the\ Pest\ (as\ an\ int)\n\ @return\ the\ state\ of\ the\ Pest\n
comment3.params=
comment3.target=java.lang.String\ getFile()
comment3.text=\ \n\ returns\ the\ file\ name\ for\ the\ Pest\ image.\ \ The\ file\ must\ be\ located\ \ \n\ in\ the\ DemoPest\ project\ directory.\n\ @return\ the\ file\ name\ for\ the\ Pest\ image\n
comment4.params=
comment4.target=int\ getNumActions()
comment4.text=\ \n\ returns\ the\ number\ of\ actions\ that\ the\ Pest\ responds\ to\ (NOT\ including\n\ the\ random\ action)\n\ @return\ the\ number\ of\ actions\n
comment5.params=
comment5.target=java.lang.String\ getState()
comment5.text=\ \n\ return\ the\ current\ state\ of\ the\ Pest\ (as\ a\ String)\n\ if\ the\ current\ state\ is\ invalid,\ this\ method\ returns\ "error"\n\ @return\ the\ current\ state\ of\ the\ Pest\n
comment6.params=actionNum
comment6.target=java.lang.String\ getAction(int)
comment6.text=\ \n\ returns\ the\ actionNumth\ action\ that\ can\ be\ applied\ to\ the\ Pest\ \n\ (not\ including\ random)\n\ if\ actionNum\ does\ not\ correspond\ to\ a\ valid\ action,\ this\ method\ returns\n\ the\ empty\ string\ ""\n\ @param\ actionNum\ the\ number\ of\ the\ requested\ action\n\ @return\ the\ name\ of\ the\ actionNumth\ action\n
comment7.params=
comment7.target=java.lang.String\ getPestSound()
comment7.text=\n\ return\ the\ sound\ that\ the\ pest\ makes\ in\ its\ current\ state\n\ if\ the\ state\ is\ invalid,\ this\ method\ returns\ the\ empty\ string\ ""\n\ @return\ the\ pest\ sound\ in\ the\ current\ state\n
comment8.params=
comment8.target=java.lang.String\ getPestAction()
comment8.text=\ \n\ return\ how\ the\ Pest\ acts\ in\ its\ current\ state\n\ if\ the\ state\ is\ invalid,\ this\ method\ returns\ the\ empty\ string\ ""\n\ @return\ the\ pest\ action\ in\ the\ current\ state\n
comment9.params=action
comment9.target=void\ doAction(int)
comment9.text=\ \n\ change\ the\ state\ of\ the\ Pest\ in\ response\ to\ the\ specified\ owner\ action\ \n\ (and\ also\ the\ random\ action).\ \ If\ the\ action\ is\ not\ valid,\ the\ state\n\ of\ the\ pet\ does\ not\ change\n\ @param\ action\ the\ action\ that\ the\ Pest\ responds\ to\ \n
numComments=10
